// level Max üòéüëåüî•

// Gi√° m·∫∑c ƒë·ªãnh!
function defaultPrice(originalPrice) {
  return originalPrice;
}

// Gi√° black friday
function blackFridayPrice(originalPrice) {
  return originalPrice <= 200 ? originalPrice * 0.8 : originalPrice - 50;
}

// Gi√° Preorder
function preOrderPrice(originalPrice) {
  return originalPrice * 0.6;
}

/**
 * N·∫øu c√≥ th√™m m·ª•c gi·∫£m gi√° th√¨ m√¨nh s·∫Ω m·ªü r·ªông ·ªü ƒë√¢y! khi th√™m m·ª•c gi·∫£m gi√° xong th√¨ m√¨nh
 * b·ªè th√™m h√†m v√†o object ·ªü d∆∞·ªõi l√† xong!
 */

/**
 * V√≠ d·ª• th√™m h√†m
 * function teacherDay(originalPrice){
 *    return originalPrice * 0.5
 * }
 */

// Ch√∫ng ta s·ª≠ d·ª•ng 1 object ƒë·ªÉ c√≥ th·ªÉ map qua c√°c h√†m!
const getPriceStrategies = {
  default: defaultPrice,
  blackFriday: blackFridayPrice,
  preOrder: preOrderPrice,
  //teacherDay: teacherDay
  //or
  //teacherDay
};

// H√†m ch√≠nh!!
function getPrice(originalPrice, typePromotion) {
  return getPriceStrategies[typePromotion](originalPrice);
}

// S·ª≠ d·ª•ng!
console.log(`---> PRICE:::`, getPrice(200, "preOrder")); //preOrder l·∫•y trong Object ƒë·ªÉ l·∫•y t√™n h√†m

//S·ª≠ d·ª•ng trong tr∆∞·ªùng h·ª£p th√™m teacher day
//console.log(`---> TEACHER PRICE:::`, getPrice(200, "teacherDay"));

/**
 * Khi s·ª≠ d·ª•ng nh∆∞ n√†y s·∫Ω tr√°nh ƒë∆∞·ª£c n·∫øu trong h√†m ch√≠nh getPrice b·ªã l·ªói.
 * Khi getPrice b·ªã l·ªói kh·∫£ nƒÉng cao l√† 1 function n√†o ƒë√≥ khai b√°o b·ªã l·ªói
 *
 * V√≠ d·ª•: h√†m blackFridayPrice b·ªã l·ªói th√¨ c√°c ch·ªó s·ª≠ d·ª•ng c√°c h√†m kh√°c
 * nh∆∞ preOrderPrice, defaultPrice s·∫Ω kh√¥ng sao
 * C√≤n nh∆∞ level 0 th√¨ s·∫Ω khi·∫øn t·∫•t c·∫£ c√°c h√†m kh√°c b·ªã l·ªói theo v√¨ vi·∫øt chung!
 */
